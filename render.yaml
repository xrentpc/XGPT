import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from openai import OpenAI

# 🔐 ТВОИ КЛЮЧИ
TELEGRAM_TOKEN = "8174692504:AAGwOdZ7KHBEL9nZh9ldWGs2ROnJt0qqJOM"
OPENAI_API_KEY = "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"

# OpenAI клиент
client = OpenAI(api_key=OPENAI_API_KEY)

# 🔇 Настройка логов — только ошибки
logging.basicConfig(level=logging.WARNING)

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Привет! Меня зовут XGPT 👾\nНапиши мне что угодно.")

# Сообщения от пользователя
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": user_message}]
        )
        reply = response.choices[0].message.content.strip()
        await update.message.reply_text(reply)
    except Exception as e:
        await update.message.reply_text("Произошла ошибка. Проверь API-ключ или модель.")
        logging.error(e)

# Инициализация Telegram-бота
app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

# Обработчики
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

print("✅ Бот запущен.")
app.run_polling()